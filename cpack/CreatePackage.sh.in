#!/bin/sh
# Creates a zipped redistributable Thrive package for linux
version=@THRIVE_VERSION@
versionedname=Thrive-$version
stripfiles=1

target=$versionedname

librariestoinstall="@LINUX_LIBRARIES@"

mkdir -p $target
mkdir -p $target/bin


# Copy all required files
cp Thrive $target/bin
cp contrib/lua/liblua.so $target/bin


if [ $stripfiles = 1 ] ; then
    strip $target/bin/Thrive
    strip $target/bin/liblua.so
fi

# Copies a single library

CopyDependency () {

    echo "Copying dependency $1"    
    
    cp "$1" $target/bin

    linkto=$(readlink "$1")

    if [ ! -z "$linkto" ]; then

        echo "Following symlink $1 => $linkto"
        linkdir=$(dirname "$1")
        
        CopyDependency "$linkdir/$linkto"
        
    fi

    # Strip the copied file
    if [ $stripfiles = 1 ] ; then

        filename=$(basename "$1")
        echo "Stripping dependency $filename"
        strip "$target/bin/$filename"
    fi
}

# Loop through all required libraries
echo "$librariestoinstall" | awk 'BEGIN { RS=";" } { print $0 }' | while read -r line ; do

    filename=$(basename "$line")
    extension="${filename##*.}"
    
    if [ -f "$line" ] && [ "$extension" != "a" ]; then
        
        CopyDependency "$line"
        echo ""

        # libboost_thread hack
        case "$line" in 
            *boost_thread*)
                # Copy the actual files
                libdir=$(dirname "${line}")
                cp $dirname/libboost_thread.* $target/bin
            ;;
        esac
    fi 
done

# Ogre plugins
cp ./RenderSystem_GL.* $target/bin
cp ./Plugin_ParticleFX.* $target/bin
cp ./Plugin_CgProgramManager.* $target/bin

if [ $stripfiles = 1 ] ; then
    strip $target/bin/RenderSystem_GL.*
    strip $target/bin/Plugin_ParticleFX.*
    strip $target/bin/Plugin_CgProgramManager.*
fi

echo "ldd finds extra dependencies and missing symlinks"
ldd $target/bin/Thrive | awk '{ print $3 }' | while read -r line ; do
    
    case "$line" in
        *resample*)
        ;&
        *vorbis*)
        ;&
        *theora*)
        ;&
        *opus*)
        ;&
        *pcre*)
        ;&
        *ogg*)
        ;&
        *tinyxml*)
        ;&
        *avcodec*)
        ;&
        *avformat*)
        ;&
        *avutil*)
        ;&
        *swscale*)
        ;& 
        *freeimage*)
            CopyDependency "$line"
            ;;
    esac
done

# Assets
# TODO: see if these could be symlinks
cp -r ../assets/fonts $target/
#cp -r ../assets/definitions $target/
cp -r ../assets/gui $target/
cp -r ../assets/materials $target/
cp -r ../assets/models $target/
cp -r ../assets/sounds $target/
cp -r ../assets/videos $target/
cp -r ../scripts $target/

echo "Copying and creating rest of the resources"

# Ogre files that are required until Thrive gets its own config files
cp resources.cfg $target/bin
cp plugins.cfg $target/bin

# Launch links
echo "#!/bin/sh
cd bin
./Thrive" > $target/launch.sh
chmod +x $target/launch.sh

# Info files
cp ../LICENSE.txt $target/
cp ../README.md $target/
cp ../gpl.txt $target/

# documentation
cp -r doc $target/

# Version file
cp ../thriveversion.ver $target/
touch "$target/package.version.$versionedname"

# Source code setup script
mkdir -p $target/source_build
cp ../SetupThrive.sh $target/source_build
echo "To get a copy of the source code and automatically build it run ./SetupThrive.sh.
Note: the script requires root, so you should read through it before running it" > $target/source_build/README.MD

# Delete log files, if ran from the staging folder before
echo "Deleting log and settings files if they exist"
rm $target/bin/cAudioEngineLog.html
rm $target/bin/CEGUI.log
rm $target/bin/default
rm $target/bin/ogre.cfg

echo "Zipping it up"

# Zip it up
7za a "Thrive.$version.7z" $versionedname


(
    cd $target/bin
    ldd Thrive

    echo "Please verify above that all uncommon library paths begin with ./"
)

echo "Package Thrive.$version.7z done"
